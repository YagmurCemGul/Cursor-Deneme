name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'cursor/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run ESLint
        run: npm run lint
        
      - name: Check formatting
        run: npm run format:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run tests
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Type check
        run: npm run type-check

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: [lint, test, type-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build extension
        run: npm run build
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-build
          path: dist/
          retention-days: 7

  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: [lint, test, type-check]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build Storybook
        run: npm run build-storybook
        
      - name: Upload Storybook artifact
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: storybook-static/
          retention-days: 7

  deploy-storybook:
    name: Deploy Storybook to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-storybook
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Download Storybook artifact
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: storybook-static
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: storybook-static
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
